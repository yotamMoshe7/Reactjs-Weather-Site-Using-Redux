{"version":3,"sources":["components/header/header.component.jsx","components/crawler/crawler.component.js","redux/default-places/default-places.types.js","components/right-screen-item/right-screen-item.jsx","redux/default-places/default-places.actions.js","constants/constants.js","components/right-screen/right-screen.component.jsx","components/crawler/create-search-url.js","components/left-screen-item/left-screen-item.component.jsx","redux/search/search.types.js","components/left-screen/left-screen.component.jsx","redux/search/search.actions.js","global.styles.js","App.js","redux/search/search.reducer.js","redux/default-places/default-places.utils.js","redux/default-places/default-places.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["Header","className","request","require","cheerio","getWeatherData","url","Promise","resolve","reject","nameCrawl","tempCrawl","windCrawl","humidityCrawl","iconCrawl","error","response","html","statusCode","$","load","find","text","replace","split","attr","name","temp","humidity","wind","icon","DefaultPlacesTypes","getDataAndSetInState","searchInput","setDefaultPlaceWeatherData","a","console","log","weatherDataPromise","RightScreenItem","this","props","places","index","undefined","src","alt","windSpeed","Component","connect","defaultPlaces","dispatch","place","type","payload","WeatherSiteSearches","DEFAULT_SEARCH_1","DEFAULT_SEARCH_2","DEFAULT_SEARCH_3","SEARCH_ENGINE","BASIC_URL","RightScreen","createSearchUrl","join","LeftScreenItem","search","searchField","SearchActionsTypes","cerateUrlAndGetWeatherData","setWeatherData","urlPromise","LeftScreen","searchButtonClick","searchUserInput","document","getElementById","value","setSearchField","id","placeholder","onClick","state","data","weatherData","createGlobalStyle","App","INITIAL_STATE","searchReducer","action","addPlace","placeToAdd","placesReducer","combineReducers","middlewares","logger","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b89f9b88.chunk.js","sourcesContent":["import React from 'react';\r\nimport './header.styles.scss';\r\n\r\nconst Header = () => (\r\n  <div className='header'>\r\n    <div className='title'>Weather Web</div>\r\n  </div>\r\n);\r\n\r\nexport default Header;","// import { connect } from 'react-redux';\r\n// import { setWeatherData } from '../../redux/search/search.actions';\r\n\r\nconst request = require('request');\r\nconst cheerio = require('cheerio');\r\n\r\nexport const getWeatherData = (url) => {\r\n  return new Promise(function (resolve, reject) {\r\n\r\n    var nameCrawl, tempCrawl, windCrawl, humidityCrawl, iconCrawl = '';\r\n\r\n    request(url, (error, response,\r\n      html) => {\r\n      if (!error && response.statusCode === 200) {\r\n        const $ = cheerio.load(html);\r\n\r\n        //Pull city name\r\n        nameCrawl = $('.header-inner')\r\n          .find('h1')\r\n          .text();\r\n\r\n        //Pull temp\r\n        tempCrawl = $('.temp')\r\n          .text()\r\n          .replace(/\\s\\s+/g, '')\r\n          .split('C')[0];\r\n\r\n        //Pull wind\r\n        windCrawl = $('.left')\r\n          .text()\r\n          .replace(/\\s\\s+/g, '')\r\n          .split('Wind Gusts')[1]\r\n          .split('km')[0];\r\n\r\n        //Pull humidity\r\n        humidityCrawl = $('.left')\r\n          .text()\r\n          .replace(/\\s\\s+/g, '')\r\n          .split('Humidity')[1]\r\n          .split('%')[0];\r\n\r\n        //Pull icon\r\n        iconCrawl = $('.icon')\r\n          .attr('src');\r\n\r\n\r\n        // setWeatherData({\r\n        //   name: nameCrawl,\r\n        //   temp: tempCrawl,\r\n        //   humidity: humidityCrawl,\r\n        //   wind: windCrawl,\r\n        //   icon: iconCrawl\r\n        // })\r\n\r\n        resolve({\r\n          name: nameCrawl,\r\n          temp: tempCrawl,\r\n          humidity: humidityCrawl,\r\n          wind: windCrawl,\r\n          icon: iconCrawl\r\n        });\r\n      }\r\n      else {\r\n        reject(error);\r\n      }\r\n\r\n    });\r\n  });\r\n}\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//   setWeatherData: data => dispatch(setWeatherData(data))\r\n// });\r\n\r\n// export default connect(null, mapDispatchToProps)(getWeatherData);\r\n\r\n","export const DefaultPlacesTypes = {\r\n  SET_DEFAULT_PLACES_WEATHER_DATA: 'SET_DEFAULT_PLACES_WEATHER_DATA'\r\n};","import React from 'react';\r\nimport './right-screen-item.styles.scss';\r\nimport { getWeatherData } from '../crawler/crawler.component';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setDefaultPlaceWeatherData } from '../../redux/default-places/default-places.actions';\r\n\r\n\r\nconst getDataAndSetInState =\r\n  async (searchInput, setDefaultPlaceWeatherData) => {\r\n    console.log(\"1\");\r\n    var weatherDataPromise = await getWeatherData(searchInput);\r\n    setDefaultPlaceWeatherData(weatherDataPromise);\r\n  }\r\n\r\nclass RightScreenItem extends Component {\r\n\r\n  componentDidMount() {\r\n    getDataAndSetInState(this.props.url, this.props.setDefaultPlaceWeatherData);\r\n\r\n    // this.interval = setInterval(() => getDataAndSetInState(this.props.url, this.props.setDefaultPlaceWeatherData), 10000);\r\n  }\r\n\r\n  render() {\r\n\r\n    const places = this.props.places;\r\n    const index = this.props.index;\r\n\r\n    return (\r\n      <div className='right-screen-item'>\r\n        <div className='city-name'>{places[index] !== undefined ? places[index].name : ''}</div>\r\n        <div className='icon'>\r\n          <img\r\n            className='img' src={`https://www.accuweather.com/${places[index] !== undefined ? places[index].icon : ''}`} alt='weather-icon'>\r\n          </img>\r\n        </div>\r\n        <div className='temp'>{places[index] !== undefined ? places[index].temp : ''}</div>\r\n        <div className='wind-speed'>Wind Speed:{places[index] !== undefined ? places[index].windSpeed : ''} mph</div>\r\n        <div className='humidity'>Humidity:{places[index] !== undefined ? places[index].humidity : ''}%</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ defaultPlaces: { places } }) => ({\r\n  places\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setDefaultPlaceWeatherData: place => dispatch(setDefaultPlaceWeatherData(place))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RightScreenItem);","import { DefaultPlacesTypes } from './default-places.types';\r\n\r\nexport const setDefaultPlaceWeatherData = place => ({\r\n  type: DefaultPlacesTypes.SET_DEFAULT_PLACES_WEATHER_DATA,\r\n  payload: place\r\n});","const WeatherSiteSearches = {\r\n  DEFAULT_SEARCH_1: 'https://www.accuweather.com/en/il/hod-hasharon/212527/current-weather/212527',\r\n  DEFAULT_SEARCH_2: 'https://www.accuweather.com/en/il/haifa/213181/current-weather/213181',\r\n  DEFAULT_SEARCH_3: 'https://www.accuweather.com/en/il/raananna/212570/current-weather/212570',\r\n  SEARCH_ENGINE: 'https://www.accuweather.com/en/search-locations?query=',\r\n  BASIC_URL: 'https://www.accuweather.com/'\r\n}\r\n\r\nexport default WeatherSiteSearches;","import React from 'react';\r\nimport './right-screen.styles.scss';\r\nimport RightScreenItem from '../right-screen-item/right-screen-item';\r\nimport WeatherSiteSearches from '../../constants/constants';\r\n\r\nconst RightScreen = (props) => (\r\n  <div className='right-screen'>\r\n    <RightScreenItem index={0}  url={ WeatherSiteSearches.DEFAULT_SEARCH_1 } />\r\n    <RightScreenItem index={1}  url={ WeatherSiteSearches.DEFAULT_SEARCH_2 } />\r\n  </div>\r\n);\r\n\r\nexport default RightScreen;","import WeatherSiteSearches from '../../constants/constants';\r\n\r\nconst request = require('request');\r\nconst cheerio = require('cheerio');\r\n\r\n\r\nexport const createSearchUrl = (searchInput) => {\r\n  return new Promise(function (resolve, reject) {\r\n\r\n    //Remove spaces from url\r\n    var url = `${WeatherSiteSearches.SEARCH_ENGINE}${searchInput}`;\r\n    url = url.split(' ').join('');\r\n    url = `${url}  israel`;\r\n\r\n    request(url, (error, response,\r\n      html) => {\r\n      if (!error && response.statusCode === 200) {\r\n        const $ = cheerio.load(html);\r\n\r\n        url = $('head').find('link[rel=canonical]').attr('href');\r\n\r\n        //Switch for more details page\r\n        url = url.split('weather-forecast').join('current-weather');\r\n\r\n        //Replace hebrew with english\r\n        url = url.split('/he/').join('/en/');\r\n        \r\n        console.log('1');\r\n        resolve(url);\r\n      }\r\n      else {\r\n        reject(error);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { Component } from 'react';\r\nimport './left-screen-item.styles.scss';\r\nimport { connect } from 'react-redux';\r\n\r\nclass LeftScreenItem extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className='left-screen-item'>\r\n        <div className='city-name'>{this.props.name}</div>\r\n        <div className='icon'>\r\n          <img\r\n            className='img' src={`https://www.accuweather.com/${this.props.icon}`} alt='weather-icon'>\r\n          </img>\r\n        </div>\r\n        <div className='temp'>{this.props.temp}</div>\r\n        <div className='wind-speed'>Wind Speed: {this.props.wind} mph</div>\r\n        <div className='humidity'>Humidity: {this.props.humidity}</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ search: { searchField, name, temp, humidity, icon, wind } }) => ({\r\n  searchField, name, temp, humidity, icon, wind\r\n});\r\n\r\nexport default connect(mapStateToProps)(LeftScreenItem);","export const SearchActionsTypes = {\r\n  SEARCH_BUTTON_PRESSED: 'SEARCH_BUTTON_PRESSED',\r\n  SET_WEATHER_DATA: 'SET_WEATHER_DATA'\r\n};","import React, { Component } from 'react';\r\nimport './left-screen.styles.scss';\r\nimport { createSearchUrl } from '../crawler/create-search-url';\r\nimport { getWeatherData } from '../crawler/crawler.component';\r\nimport LeftScreenItem from '../left-screen-item/left-screen-item.component';\r\nimport WeatherSiteSearches from '../../constants/constants';\r\nimport { connect } from 'react-redux';\r\nimport { setSearchField } from '../../redux/search/search.actions';\r\nimport { setWeatherData } from '../../redux/search/search.actions';\r\n\r\nconst cerateUrlAndGetWeatherData = async (searchInput, setWeatherData) => {\r\n  var urlPromise = await createSearchUrl(searchInput);\r\n  var weatherDataPromise = await getWeatherData(urlPromise);\r\n  setWeatherData(weatherDataPromise);\r\n}\r\n\r\nconst getDataAndSetInState =\r\n  async (searchInput, setWeatherData) => {\r\n    console.log(\"1\");\r\n    var weatherDataPromise = await getWeatherData(searchInput);\r\n    setWeatherData(weatherDataPromise);\r\n  }\r\n\r\nclass LeftScreen extends Component {\r\n\r\n  componentDidMount() {\r\n    //Initial state when page upload\r\n    getDataAndSetInState(WeatherSiteSearches.DEFAULT_SEARCH_3,\r\n      this.props.setWeatherData);\r\n  \r\n    // this.interval = setInterval(() => getDataAndSetInState(this.props.url, this.props.setDefaultPlaceWeatherData), 10000);\r\n  }\r\n\r\n  searchButtonClick = () => {\r\n    //Get user input\r\n    var searchUserInput = document.getElementById(\"input-field\").value;\r\n\r\n    this.props.setSearchField(searchUserInput);\r\n\r\n    //Create url and update data\r\n    cerateUrlAndGetWeatherData(searchUserInput, this.props.setWeatherData)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='left-screen'>\r\n        <div className='search'>\r\n          <input id='input-field' className='input' type=\"text\" placeholder=' Search location...' />\r\n          <button onClick={this.searchButtonClick}\r\n            className='btn' type=\"submit\"><i id='icon' className=\"fa fa-search\" ></i></button>\r\n        </div>\r\n\r\n        <LeftScreenItem />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  searchField: state.search.searchField\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setSearchField: searchInput => dispatch(setSearchField(searchInput)),\r\n  setWeatherData: data => dispatch(setWeatherData(data))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LeftScreen);","import { SearchActionsTypes } from './search.types';\r\n\r\nexport const setSearchField = searchField => ({\r\n  type: SearchActionsTypes.SEARCH_BUTTON_PRESSED,\r\n  payload: searchField,\r\n});\r\n\r\nexport const setWeatherData = weatherData => ({\r\n  type: SearchActionsTypes.SET_WEATHER_DATA,\r\n  payload: {\r\n    name: weatherData.name,\r\n    temp: weatherData.temp,\r\n    humidity: weatherData.humidity,\r\n    wind: weatherData.wind,\r\n    icon: weatherData.icon\r\n  }\r\n});","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\nbody {\r\n  height: 100vw;\r\n  width: 100vw;\r\n  background-image: url(\"./assets/background-image/background4.jpg\");\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n}\r\n\r\ncode {\r\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\r\n    monospace;\r\n}\r\n`","import React, { Component } from 'react';\nimport Header from './components/header/header.component';\nimport RightScreen from './components/right-screen/right-screen.component';\nimport LeftScreen from './components/left-screen/left-screen.component';\nimport { GlobalStyle } from './global.styles';\nimport './App.css';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className='app'>\n          <Header />\n          <RightScreen />\n          <LeftScreen />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { SearchActionsTypes } from './search.types';\r\n\r\nconst INITIAL_STATE = {\r\n  searchField: 'Default Search',\r\n  name: '',\r\n  temp: '',\r\n  humidity: '',\r\n  wind: '',\r\n  icon: ''\r\n}\r\n\r\nconst searchReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case SearchActionsTypes.SEARCH_BUTTON_PRESSED:\r\n      return {\r\n        ...state,\r\n        searchField: action.payload\r\n      };\r\n    \r\n    case SearchActionsTypes.SET_WEATHER_DATA:\r\n      return{\r\n        ...state,\r\n        name: action.payload.name,\r\n        temp: action.payload.temp,\r\n        humidity: action.payload.humidity,\r\n        wind: action.payload.wind,\r\n        icon: action.payload.icon\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default searchReducer;","export const addPlace = (places, placeToAdd) => {\r\n  console.log(places);\r\n  const existingPlace = places.find(\r\n    place => place.name === placeToAdd.name\r\n  );\r\n\r\n  if(!existingPlace){\r\n    return [...places, placeToAdd]\r\n  }\r\n\r\n  else return [...places]\r\n};","import { DefaultPlacesTypes } from './default-places.types';\r\nimport { addPlace } from './default-places.utils';\r\n\r\nconst INITIAL_STATE = {\r\n  places: []\r\n};\r\n\r\nconst placesReducer = (state = INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n    case DefaultPlacesTypes.SET_DEFAULT_PLACES_WEATHER_DATA:\r\n      return{\r\n        places: addPlace(state.places, action.payload)\r\n      };\r\n\r\n      default:\r\n        return state;\r\n  }\r\n}\r\n\r\nexport default placesReducer;","import { combineReducers } from 'redux';\r\n\r\nimport searchReducer from './search/search.reducer';\r\nimport placesReducer from './default-places/default-places.reducer';\r\n\r\nexport default combineReducers ({\r\n  search: searchReducer,\r\n  defaultPlaces: placesReducer\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger';\r\n\r\nimport rootReducer from './root-reducer';\r\n\r\nconst middlewares = [logger];\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}